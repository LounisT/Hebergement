@model HebergementViewModel
@using HebergementManager.Web.Services

@{
    ViewData["Title"] = "Modifier " + Model.Nom;
    var types = ViewBag.TypeHebergements as List<TypeHebergementDto>;
}

<div class="space-y-8 animate-fade-in">
    <!-- Header -->
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Modifier l'hébergement</h1>
            <p class="text-sm text-gray-600 mt-1">@Model.Nom</p>
        </div>

        <a asp-action="Index"
           class="inline-flex items-center space-x-2 bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-2 rounded-lg font-medium transition-colors text-sm">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            <span>Retour</span>
        </a>
    </div>

    <!-- Formulaire -->
    <div class="max-w-4xl">
        <form asp-action="Edit" method="post" class="space-y-8">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.DateCreation)
            
            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-200">
                <h2 class="text-lg font-semibold text-gray-900 mb-4">Informations générales</h2>
                
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                    <!-- Nom -->
                    <div class="lg:col-span-2">
                        <label asp-for="Nom" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <input asp-for="Nom" 
                               class="w-full px-4 py-3 border border-gray-200 rounded-xl bg-white/80 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all"/>
                        <span asp-validation-for="Nom" class="text-red-500 text-sm mt-1"></span>
                    </div>
                    
                    <!-- Description -->
                    <div class="lg:col-span-2">
                        <label asp-for="Description" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <textarea asp-for="Description" rows="4"
                                  class="w-full px-4 py-3 border border-gray-200 rounded-xl bg-white/80 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all resize-none"></textarea>
                        <span asp-validation-for="Description" class="text-red-500 text-sm mt-1"></span>
                    </div>
                    
                    <!-- Type -->
                    <div>
                        <label asp-for="TypeHebergementId" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <select asp-for="TypeHebergementId"
                                class="w-full px-4 py-3 border border-gray-200 rounded-xl bg-white/80 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all">
                            <option value="">-- Sélectionnez un type d'hébergement --</option>
                            @foreach (var type in types)
                            {
                                <option value="@type.Id">@type.Nom</option>
                            }
                        </select>
                        <span asp-validation-for="TypeHebergementId" class="text-red-500 text-sm mt-1"></span>
                    </div>
                    
                    <!-- Capacité -->
                    <div>
                        <label asp-for="CapaciteMax" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <input asp-for="CapaciteMax" type="number" min="1" max="50"
                               class="w-full px-4 py-3 border border-gray-200 rounded-xl bg-white/80 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all"/>
                        <span asp-validation-for="CapaciteMax" class="text-red-500 text-sm mt-1"></span>
                    </div>
                    
                    <!-- Prix -->
                    <div>
                        <label asp-for="PrixParNuit" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <div class="relative">
                            <span class="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500 font-medium">€</span>
                            <input asp-for="PrixParNuit" type="number" step="0.01" min="0.01"
                                   class="w-full pl-8 pr-4 py-3 border border-gray-200 rounded-xl bg-white/80 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all"/>
                        </div>
                        <span asp-validation-for="PrixParNuit" class="text-red-500 text-sm mt-1"></span>
                    </div>
                    
                    <!-- Statut -->
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Statut</label>
                        <label class="inline-flex items-center">
                            <input asp-for="EstActif" type="checkbox" 
                                   class="rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"/>
                            <span class="ml-2 text-sm text-gray-700">Hébergement actif</span>
                        </label>
                    </div>
                </div>
            </div>
            
            <!-- Localisation -->
            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-200">
                <h2 class="text-lg font-semibold text-gray-900 mb-4">Localisation</h2>
                
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    <!-- Adresse -->
                    <div class="lg:col-span-2">
                        <label asp-for="Adresse" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <input asp-for="Adresse" 
                               class="w-full px-4 py-3 border border-gray-200 rounded-xl bg-white/80 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all"/>
                        <span asp-validation-for="Adresse" class="text-red-500 text-sm mt-1"></span>
                    </div>
                    
                    <!-- Code postal -->
                    <div>
                        <label asp-for="CodePostal" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <input asp-for="CodePostal" 
                               class="w-full px-4 py-3 border border-gray-200 rounded-xl bg-white/80 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all"/>
                        <span asp-validation-for="CodePostal" class="text-red-500 text-sm mt-1"></span>
                    </div>
                    
                    <!-- Ville -->
                    <div class="lg:col-span-3">
                        <label asp-for="Ville" class="block text-sm font-medium text-gray-700 mb-2"></label>
                        <input asp-for="Ville" 
                               class="w-full px-4 py-3 border border-gray-200 rounded-xl bg-white/80 focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all"/>
                        <span asp-validation-for="Ville" class="text-red-500 text-sm mt-1"></span>
                    </div>
                </div>
            </div>

            <!-- Équipements -->
            <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-200">
                <h2 class="text-lg font-semibold text-gray-900 mb-4">Équipements disponibles</h2>

                @{
                    var equipements = ViewBag.Equipements as List<CategorieEquipementDto>;
                }

                @if (equipements != null && equipements.Any())
                {
                    <div class="space-y-4">
                        @foreach (var categorie in equipements)
                        {
                            <div class="border border-gray-200 rounded-lg p-4 bg-gray-50">
                                <div class="flex items-center justify-between mb-3">
                                    <h3 class="font-medium text-gray-900">@categorie.CategorieNom</h3>
                                    <button type="button"
                                            class="category-toggle inline-flex items-center gap-1.5 px-3 py-1.5 text-xs font-medium text-indigo-600 bg-white hover:bg-indigo-50 rounded-md transition-colors border border-indigo-200"
                                            data-category="@categorie.CategorieId"
                                            onclick="toggleCategory(this)">
                                        <svg class="w-3.5 h-3.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                        </svg>
                                        <span>Tout</span>
                                    </button>
                                </div>
                                @if (categorie.Equipements != null && categorie.Equipements.Any())
                                {
                                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2">
                                        @foreach (var equipement in categorie.Equipements)
                                        {
                                            <label for="equip_@equipement.Id" class="flex items-center p-2 rounded hover:bg-white cursor-pointer transition-colors">
                                                <input type="checkbox" name="EquipementIds" value="@equipement.Id" id="equip_@equipement.Id"
                                                       @(Model.EquipementIds.Contains(equipement.Id) ? "checked" : "")
                                                       class="equipement-checkbox w-4 h-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500 focus:ring-2"
                                                       data-category="@categorie.CategorieId" />
                                                <span class="ml-2 text-sm text-gray-700">@equipement.Nom</span>
                                            </label>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <p class="text-sm text-gray-500 italic">Aucun équipement</p>
                                }
                            </div>
                        }
                    </div>
                }
            </div>

            <!-- Actions -->
            <div class="flex items-center justify-end space-x-4 pt-6">
                <a asp-action="Index" 
                   class="px-6 py-3 border border-gray-200 text-gray-700 rounded-xl hover:bg-gray-50 transition-colors font-medium">
                    Annuler
                </a>
                <button type="submit" 
                        class="btn-gradient inline-flex items-center space-x-2 text-white px-8 py-3 rounded-xl font-semibold transition-all duration-300 shadow-lg hover:shadow-xl">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    <span>Enregistrer</span>
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function toggleCategory(button) {
            const categoryId = button.dataset.category;
            const equipementCheckboxes = document.querySelectorAll(`.equipement-checkbox[data-category="${categoryId}"]`);

            // Vérifier si tous sont déjà cochés
            const allChecked = Array.from(equipementCheckboxes).every(cb => cb.checked);

            // Inverser l'état
            equipementCheckboxes.forEach(cb => {
                cb.checked = !allChecked;
            });

            // Mettre à jour le texte et le style du bouton
            updateCategoryButton(button, !allChecked);
        }

        function updateCategoryButton(button, allChecked) {
            const span = button.querySelector('span');
            const svg = button.querySelector('svg');

            if (allChecked) {
                span.textContent = 'Aucun';
                button.classList.remove('text-indigo-600', 'bg-white', 'hover:bg-indigo-50');
                button.classList.add('text-red-600', 'bg-red-50', 'hover:bg-red-100');
                svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"></path>';
            } else {
                span.textContent = 'Tout';
                button.classList.remove('text-red-600', 'bg-red-50', 'hover:bg-red-100');
                button.classList.add('text-indigo-600', 'bg-white', 'hover:bg-indigo-50');
                svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>';
            }
        }

        // Au chargement, vérifier l'état de chaque catégorie
        document.addEventListener('DOMContentLoaded', function() {
            const categoryButtons = document.querySelectorAll('.category-toggle');

            categoryButtons.forEach(button => {
                const categoryId = button.dataset.category;
                const equipementCheckboxes = document.querySelectorAll(`.equipement-checkbox[data-category="${categoryId}"]`);
                const allChecked = Array.from(equipementCheckboxes).every(cb => cb.checked);

                updateCategoryButton(button, allChecked);
            });

            // Écouter les changements sur les checkboxes d'équipement
            document.querySelectorAll('.equipement-checkbox').forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    const categoryId = this.dataset.category;
                    const button = document.querySelector(`.category-toggle[data-category="${categoryId}"]`);
                    const equipementCheckboxes = document.querySelectorAll(`.equipement-checkbox[data-category="${categoryId}"]`);
                    const allChecked = Array.from(equipementCheckboxes).every(cb => cb.checked);

                    updateCategoryButton(button, allChecked);
                });
            });
        });
    </script>

    <style>
        .glass-card {
            background: rgba(255, 255, 255, 0.7);
            backdrop-filter: blur(12px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .card-elevation {
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
                        0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }

        .btn-gradient {
            background: linear-gradient(135deg, #6366f1, #8b5cf6, #ec4899);
            background-size: 200% 200%;
            animation: gradient-shift 3s ease infinite;
        }



        .animate-fade-in {
            animation: fadeIn 0.6s ease-out;
        }


    </style>
}